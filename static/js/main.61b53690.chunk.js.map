{"version":3,"sources":["board.js","go.js","App.js","serviceWorker.js","index.js"],"names":["Board","size","this","current_color","BLACK","board","create_board","last_move_passed","in_atari","attempted_suicide","EMPTY","WHITE","prototype","m","i","j","switch_player","pass","end_game","console","log","play","window","ADD_DATA","color","captured","neighbors","get_adjacent_intersections","atari","self","_","each","n","state","group","get_group","push","isEmpty","stone","visited","visited_list","queue","count","func","length","pop","liberties","stones","BoardIntersection","handleClick","_this","props","row","col","onPlay","style","top","left","classes","react_default","a","createElement","onClick","className","Component","BoardView","intersections","go_BoardIntersection","Object","assign","key","concat","width","height","id","AlertView","text","PassView","e","_this2","type","value","ContainerView","setState","go_BoardView","onBoardUpdate","bind","href","go_AlertView","go_PassView","Ipfs","require","OrbitDB","ipfs","repo","start","EXPERIMENTAL","pubsub","config","Addresses","Swarm","on","error","asyncToGenerator","regenerator_default","mark","_callee2","orbitdb","dbConfig","address","db","result","wrap","_context2","prev","next","replicate","create","sync","localOnly","write","t0","t1","sent","call","location","search","split","toString","load","_ref2","_callee","data","hash","_context","add","stop","_x","apply","arguments","iterator","limit","collect","events","map","payload","join","App","go","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61b53690.chunk.js","sourcesContent":["import _ from \"lodash\";\n\nvar Board = function(size) {\n  this.current_color = Board.BLACK;\n  this.size = size;\n  this.board = this.create_board(size);\n  this.last_move_passed = false;\n  this.in_atari = false;\n  this.attempted_suicide = false;\n};\n\nBoard.EMPTY = 0;\nBoard.BLACK = 1;\nBoard.WHITE = 2;\n\n/*\n * Returns a size x size matrix with all entries initialized to Board.EMPTY\n */\nBoard.prototype.create_board = function(size) {\n  var m = [];\n  for (var i = 0; i < size; i++) {\n    m[i] = [];\n    for (var j = 0; j < size; j++) m[i][j] = Board.EMPTY;\n  }\n  return m;\n};\n\n/*\n * Switches the current player\n */\nBoard.prototype.switch_player = function() {\n  this.current_color =\n    this.current_color === Board.BLACK ? Board.WHITE : Board.BLACK;\n};\n\n/*\n * At any point in the game, a player can pass and let his opponent play\n */\nBoard.prototype.pass = function() {\n  if (this.last_move_passed) this.end_game();\n  this.last_move_passed = true;\n  this.switch_player();\n};\n\n/*\n * Called when the game ends (both players passed)\n */\nBoard.prototype.end_game = function() {\n  console.log(\"GAME OVER\");\n};\n\n/*\n * Attempt to place a stone at (i,j). Returns true iff the move was legal\n */\nBoard.prototype.play = function(i, j) {\n  console.log(\"Played at \" + i + \", \" + j);\n  window.ADD_DATA(\"Played at \" + i + \", \" + j);\n  this.attempted_suicide = this.in_atari = false;\n\n  if (this.board[i][j] !== Board.EMPTY) return false;\n\n  var color = (this.board[i][j] = this.current_color);\n  var captured = [];\n  var neighbors = this.get_adjacent_intersections(i, j);\n  var atari = false;\n\n  var self = this;\n  _.each(neighbors, function(n) {\n    var state = self.board[n[0]][n[1]];\n    if (state !== Board.EMPTY && state !== color) {\n      var group = self.get_group(n[0], n[1]);\n      console.log(group);\n      if (group[\"liberties\"] === 0) captured.push(group);\n      else if (group[\"liberties\"] === 1) atari = true;\n    }\n  });\n\n  // detect suicide\n  if (_.isEmpty(captured) && this.get_group(i, j)[\"liberties\"] === 0) {\n    this.board[i][j] = Board.EMPTY;\n    this.attempted_suicide = true;\n    return false;\n  }\n\n  _.each(captured, function(group) {\n    _.each(group[\"stones\"], function(stone) {\n      self.board[stone[0]][stone[1]] = Board.EMPTY;\n    });\n  });\n\n  if (atari) this.in_atari = true;\n\n  this.last_move_passed = false;\n  this.switch_player();\n  return true;\n};\n\n/*\n * Given a board position, returns a list of [i,j] coordinates representing\n * orthagonally adjacent intersections\n */\nBoard.prototype.get_adjacent_intersections = function(i, j) {\n  var neighbors = [];\n  if (i > 0) neighbors.push([i - 1, j]);\n  if (j < this.size - 1) neighbors.push([i, j + 1]);\n  if (i < this.size - 1) neighbors.push([i + 1, j]);\n  if (j > 0) neighbors.push([i, j - 1]);\n  return neighbors;\n};\n\n/*\n * Performs a breadth-first search about an (i,j) position to find recursively\n * orthagonally adjacent stones of the same color (stones with which it shares\n * liberties). Returns null for if there is no stone at the specified position,\n * otherwise returns an object with two keys: \"liberties\", specifying the\n * number of liberties the group has, and \"stones\", the list of [i,j]\n * coordinates of the group's members.\n */\nBoard.prototype.get_group = function(i, j) {\n  var color = this.board[i][j];\n  if (color === Board.EMPTY) return null;\n\n  var visited = {}; // for O(1) lookups\n  var visited_list = []; // for returning\n  var queue = [[i, j]];\n  var count = 0;\n\n  let func = function(n) {\n    var state = self.board[n[0]][n[1]];\n    if (state === Board.EMPTY) count++;\n    if (state === color) queue.push([n[0], n[1]]);\n  };\n\n  while (queue.length > 0) {\n    var stone = queue.pop();\n    if (visited[stone]) continue;\n\n    var neighbors = this.get_adjacent_intersections(stone[0], stone[1]);\n    var self = this;\n\n    _.each(neighbors, func);\n\n    visited[stone] = true;\n    visited_list.push(stone);\n  }\n\n  return {\n    liberties: count,\n    stones: visited_list\n  };\n};\n\nexport default Board;\n","import React, { Component } from \"react\";\n\nimport Board from \"./board\";\n\nvar GRID_SIZE = 40;\n\nclass BoardIntersection extends Component {\n  handleClick = () => {\n    if (this.props.board.play(this.props.row, this.props.col))\n      this.props.onPlay();\n  };\n  render() {\n    var style = {\n      top: this.props.row * GRID_SIZE,\n      left: this.props.col * GRID_SIZE\n    };\n\n    var classes = \"intersection\";\n    if (this.props.color !== Board.EMPTY)\n      classes += this.props.color === Board.BLACK ? \" black\" : \" white\";\n\n    return <div onClick={this.handleClick} className={classes} style={style} />;\n  }\n}\n\nclass BoardView extends Component {\n  render() {\n    var intersections = [];\n    for (var i = 0; i < this.props.board.size; i++)\n      for (var j = 0; j < this.props.board.size; j++)\n        intersections.push(\n          <BoardIntersection\n            key={`${i}-${j}`}\n            {...{\n              board: this.props.board,\n              color: this.props.board.board[i][j],\n              row: i,\n              col: j,\n              onPlay: this.props.onPlay\n            }}\n          />\n        );\n    var style = {\n      width: this.props.board.size * GRID_SIZE,\n      height: this.props.board.size * GRID_SIZE\n    };\n    return (\n      <div style={style} id=\"board\">\n        {intersections}\n      </div>\n    );\n  }\n}\n\nclass AlertView extends Component {\n  render() {\n    var text = \"\";\n    if (this.props.board.in_atari) text = \"ATARI!\";\n    else if (this.props.board.attempted_suicide) text = \"SUICIDE!\";\n\n    return <div id=\"alerts\">{text}</div>;\n  }\n}\n\nclass PassView extends Component {\n  handleClick = e => {\n    this.props.board.pass();\n  };\n  render() {\n    return (\n      <input\n        id=\"pass-btn\"\n        type=\"button\"\n        value=\"Pass\"\n        onClick={this.handleClick}\n      />\n    );\n  }\n}\n\nclass ContainerView extends Component {\n  componentWillMount() {\n    this.setState({\n      board: this.props.board\n    });\n  }\n\n  onBoardUpdate() {\n    this.setState({ board: this.props.board });\n  }\n  render() {\n    return (\n      <div className=\"ContainerView\">\n        <div className=\"ContainerViewBoard\">\n          <BoardView\n            board={this.state.board}\n            onPlay={this.onBoardUpdate.bind(this)}\n          />\n        </div>\n\n        <div className=\"ContainerViewSidebar\">\n          <a href=\"https://github.com/OR13/G0\">Source Code</a>\n          <AlertView board={this.state.board} />\n          <PassView board={this.state.board} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContainerView;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Board from \"./board\";\n\nimport ContainerView from \"./go\";\n\nvar board = new Board(19);\n\nconst Ipfs = require(\"ipfs\");\nconst OrbitDB = require(\"orbit-db\");\n\n// OrbitDB uses Pubsub which is an experimental feature\n// and need to be turned on manually.\n// Note that these options need to be passed to IPFS in\n// all examples even if not specified so.\n\n// Create IPFS instance\nconst ipfs = new Ipfs({\n  repo: \"/orbitdb/yolo/browser/new/ipfs/0.27.3\",\n  start: true,\n  EXPERIMENTAL: {\n    pubsub: true\n  },\n  config: {\n    Addresses: {\n      Swarm: [\n        // Use IPFS dev signal server\n        // '/dns4/star-signal.cloud.ipfs.team/wss/p2p-webrtc-star',\n        \"/dns4/star-signal.cloud.ipfs.team/wss/p2p-webrtc-star/ipfs/QmWTPu7cq5dwTQTLd6FPxHbeVfin6F4HaVpXfQPh1CjiZk\"\n      ]\n    }\n  }\n});\n\nipfs.on(\"error\", e => console.error(e));\nipfs.on(\"ready\", async () => {\n  const orbitdb = new OrbitDB(ipfs);\n\n  const dbConfig = {\n    replicate: true,\n    create: true,\n    sync: true,\n    localOnly: false,\n    // type: 'keyvalue',\n    // Give write access to ourselves\n    // admin: [this.orbitdb.key.getPublic('hex')],\n    write: [\"*\"]\n  };\n\n  console.log(await ipfs.id());\n  let address;\n  let db;\n  try {\n    address = window.location.search.split(\"?address=\")[1];\n  } catch (e) {}\n\n  if (address) {\n    console.log(\"opened from address\");\n    db = await orbitdb.log(address);\n  } else {\n    console.log(\"created log\");\n    db = await orbitdb.log(\"hello\", dbConfig);\n    console.log(db.address.toString());\n    // const hash = await db.add(\"world\");\n    // console.log(hash);\n  }\n\n  await db.load(5);\n\n  window.ADD_DATA = async data => {\n    let hash = await db.add(data);\n    console.log(hash);\n  };\n\n  //\n  await db.load();\n\n  // Query\n  const result = db.iterator({ limit: -1 }).collect();\n  console.log(result);\n\n  db.events.on(\"replicated\", () => {\n    const result = db\n      .iterator({ limit: -1 })\n      .collect()\n      .map(e => e.payload.value);\n    console.log(result.join(\"\\n\"));\n  });\n\n  // console.log(JSON.stringify(result, null, 2));\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <ContainerView board={board} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}