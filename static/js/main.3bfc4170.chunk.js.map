{"version":3,"sources":["store/go/actions.js","store/go/reducer.js","store/go/redux.js","store/go/handlers.js","store/go/index.js","store/go/container.js","store/index.js","components/App/App.js","components/App/index.js","components/LandingPage/LandingPage.js","components/LandingPage/index.js","utils/ipfs-helpers.js","utils/orbit-helpers.js","utils/board.js","components/GamePage/GamePage.js","components/GamePage/index.js","components/LobbyPage/LobbyPage.js","components/LobbyPage/index.js","components/BoardIntersection/index.js","components/BoardIntersection/BoardIntersection.js","constants/index.js","components/BoardView/index.js","components/BoardView/BoardView.js","components/PassView/index.js","components/PassView/PassView.js","components/NewGame/index.js","components/NewGame/NewGame.js","components/CapturesView/index.js","components/CapturesView/CapturesView.js","components/ContainerView/ContainerView.js","components/NewGameDialog/NewGameDialog.js","components/NewGameDialog/index.js","components/IPFSPubSubChat/IPFSPubSubChat.js","components/IPFSPubSubChat/index.js","components/PageNavigation/PageNavigation.js","components/PageNavigation/index.js","components/PlayerProfile/PlayerProfile.js","components/PlayerProfile/index.js","serviceWorker.js","index.js"],"names":["playerProfileUpdated","createAction","_ref","peerId","playerName","playerEmoji","chatMessageReceived","_ref2","from","content","timestamp","selfPeerInfo","_ref3","peerInfo","gameInvitationRecieved","_ref4","gameInvitationAccepted","_ref5","nonce","players","handleActions","_handleActions","Object","defineProperty","state","payload","objectSpread","messages","toConsumableArray","concat","game","invitation","version","connect","go","router","actions","withHandlers","navigateTo","asyncToGenerator","regenerator_default","a","mark","_callee","path","wrap","_context","prev","next","history","push","stop","this","_x","apply","arguments","sendMessage","_callee2","room","message","_context2","JSON","stringify","action","broadcast","_x2","updatePlayerProfile","_ref6","_callee3","_context3","_x3","saveDTO","_ref8","_callee4","_ref7","db","dto","opponent","_context4","put","_id","sendTo","_x4","deleteDTO","_ref10","_callee5","_ref9","_context5","del","_x5","sendGameInvite","_ref11","_ref13","_callee6","_ref12","_context6","to","_x6","acceptGameInvite","_ref14","_ref16","_callee7","_ref15","_context7","_x7","store_go","reducer","container","compose","withRedux","createBrowserHistory","rootReducer","connectRouter","appReducers","persistConfig","key","blacklist","storage","store","createStore","persistReducer","combineReducers","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","persistor","persistStore","App","react_default","createElement","es","integration_react","lib","Switch","Route","exact","render","components_LandingPage","components_LobbyPage","components_GamePage","Component","LandingPage","_this","className","particles_default","Button_default","id","variant","color","onClick","props","ipfs","window","Ipfs","repo","EXPERIMENTAL","pubsub","config","Addresses","Swarm","getIPFS","Promise","resolve","reject","on","OrbitDB","require","getOrbitDB","orbitdb","abrupt","sent","undefined","playHistoryX","playHistoryY","Board","size","board","last_move_passed","in_atari","attempted_suicide","captures","capturesArrayBlack","capturesArrayWhite","moveCount","moveCountArray","last_move_undo","current_color","classCallCheck","getDataTransferObject","parse","create_board","m","i","j","EMPTY","reset","BLACK","switch_player","WHITE","pass","end_game","undo","length","_this$history$pop","pop","is_valid_state","n","play","captured","neighbors","get_adjacent_intersections","atari","self","_","each","group","get_group","turnBlack","turnWhite","isEmpty","stone","cloneDeep","visited","visited_list","queue","count","func","liberties","stones","Room","playerColorStringToInt","peerIdToProfileAttribute","attr","GamePage","ready","pathname","location","orbitDBAddress","replace","roomName","split","_ipfs","open","load","get","name","peer","_JSON$parse","data","console","log","_this2","setState","pollTillPresent","setInterval","_room$getPeers","_room$getPeers2","_colors","getPeers","slicedToArray","sort","you","colors","clearInterval","_this3","_this$props2","_this$state","components_PageNavigation","Paper_default","style","padding","marginBottom","components_PlayerProfile","align","components_BoardView","currentPlayer","onPlay","CircularProgress_default","LobbyPage","peers","handleChange","event","target","value","parsedMessage","newGameDB","gameAddress","create","replicate","overwrite","write","address","toString","isProfileReady","isLobbyReady","Grid_default","spacing","item","xs","md","map","components_IPFSPubSubChat","components_NewGameDialog","BoardIntersection","handleClick","row","col","top","left","backgroundColor","_PLAYER_ONE_COLOR","_PLAYER_TWO_COLOR","backgroundImage","_PLAYER_ONE_IMAGE","_PLAYER_TWO_IMAGE","classes","BoardView","intersections","components_BoardIntersection","assign","width","height","PassView","e","type","NewGame","reload","onReset","CapturesView","capturesArray","textCaptures","reduce","b","NewGameDialog","nextProps","keys","_this$props","Dialog_default","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Math","random","autoFocus","React","IPFSPubSubChat","scrollToBottomOfChat","setTimeout","document","querySelector","scrollTop","scrollHeight","round","Date","getTime","chatMessage","List_default","maxHeight","overflowY","mood","ListItem_default","alignItems","ListItemText_default","primary","secondary","Fragment","Typography_default","component","display","flexWrap","TextField_default","label","fullWidth","onChange","margin","ResponsiveDrawer","mobileOpen","handleDrawerToggle","theme","drawer","toolbar","Divider_default","button","ListItemIcon_default","HomeOutlined_default","GamepadOutlined_default","root","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","IconButton_default","aria-label","menuButton","Menu_default","noWrap","Hidden_default","smUp","implementation","Drawer_default","anchor","direction","paper","drawerPaper","xsDown","children","withStyles","breakpoints","up","flexShrink","marginLeft","marginRight","mixins","flexGrow","unit","withTheme","PageNavigation","moods","PlayerProfile","safePlayerProfileUpdate","sendProfileToPeers","debounce","profile","select","option","MenuItem_default","Boolean","hostname","match","ReactDOM","components_App","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.3bfc4170.chunk.js","sourcesContent":["import { createAction } from \"redux-actions\";\r\n\r\nexport const playerProfileUpdated = createAction(\r\n  \"go/PLAYER_PROFILE_UPDATED\",\r\n  ({ peerId, playerName, playerEmoji }) => ({\r\n    peerId,\r\n    playerName,\r\n    playerEmoji\r\n  })\r\n);\r\n\r\nexport const chatMessageReceived = createAction(\r\n  \"go/CHAT_MESSAGE_RECEIVED\",\r\n  ({ from, content, timestamp }) => ({\r\n    from,\r\n    content,\r\n    timestamp\r\n  })\r\n);\r\n\r\nexport const selfPeerInfo = createAction(\r\n  \"go/SELF_PEER_INFO\",\r\n  ({ peerInfo }) => ({\r\n    peerInfo\r\n  })\r\n);\r\n\r\nexport const gameInvitationRecieved = createAction(\r\n  \"go/GAME_INVITATION_RECEIVED\",\r\n  ({ from }) => ({\r\n    from\r\n  })\r\n);\r\n\r\nexport const gameInvitationAccepted = createAction(\r\n  \"go/GAME_INVITATION_ACCEPTED\",\r\n  ({ nonce, players }) => ({\r\n    nonce,\r\n    players\r\n  })\r\n);\r\n","import { handleActions } from \"redux-actions\";\r\n\r\nimport {\r\n  selfPeerInfo,\r\n  gameInvitationRecieved,\r\n  gameInvitationAccepted,\r\n  playerProfileUpdated,\r\n  chatMessageReceived\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  version: 0,\r\n  players: {},\r\n  invitation: {},\r\n  game: {},\r\n  messages: [] //require('./__fixtures__/messages').default.messages\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [selfPeerInfo]: (state, { payload }) => ({\r\n      ...state,\r\n      ...payload\r\n    }),\r\n    [chatMessageReceived]: (state, { payload }) => ({\r\n      ...state,\r\n      messages: [...state.messages, payload]\r\n    }),\r\n    [playerProfileUpdated]: (state, { payload }) => ({\r\n      ...state,\r\n      players: {\r\n        ...state.players,\r\n        [payload.peerId]: {\r\n          ...payload\r\n        }\r\n      }\r\n    }),\r\n    [gameInvitationAccepted]: (state, { payload }) => ({\r\n      ...state,\r\n      game: {\r\n        ...payload\r\n      }\r\n    }),\r\n    [gameInvitationRecieved]: (state, { payload }) => ({\r\n      ...state,\r\n      invitation: {\r\n        ...payload\r\n      }\r\n    })\r\n  },\r\n  initialState\r\n);\r\n","import { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"./actions\";\r\n\r\nexport default connect(\r\n  ({ go, router }) => ({ go, router }),\r\n  {\r\n    ...actions\r\n  }\r\n);\r\n","import { withHandlers } from \"recompose\";\r\nimport { history } from \"../index\";\r\n\r\nexport default withHandlers({\r\n  navigateTo: () => async ({ path }) => {\r\n    history.push(path);\r\n  },\r\n  sendMessage: () => async ({ room, payload }) => {\r\n    const message = JSON.stringify({\r\n      action: \"chat:message:sent\",\r\n      payload\r\n    });\r\n    await room.broadcast(message);\r\n  },\r\n  updatePlayerProfile: () => async ({ room, payload }) => {\r\n    const message = JSON.stringify({\r\n      action: \"lobby:player:profileUpdated\",\r\n      payload\r\n    });\r\n    await room.broadcast(message);\r\n  },\r\n  saveDTO: () => async ({ db, room, dto, opponent }) => {\r\n    await db.put({\r\n      _id: \"dto:latest\",\r\n      ...dto\r\n    });\r\n    const message = JSON.stringify({\r\n      action: \"game:dto:saved\",\r\n      payload: {\r\n        dto\r\n      }\r\n    });\r\n    await room.sendTo(opponent, message);\r\n    // alert(\"dto saved.\");\r\n  },\r\n  deleteDTO: () => async ({ db, room, dto, opponent }) => {\r\n    await db.del(\"dto:latest\");\r\n    const message = JSON.stringify({\r\n      action: \"game:dto:deleted\",\r\n      payload: {\r\n        dto\r\n      }\r\n    });\r\n    await room.sendTo(opponent, message);\r\n    // alert(\"dto deleted.\");\r\n  },\r\n  sendGameInvite: ({ gameInvitationAccepted }) => async ({ room, payload }) => {\r\n    const message = JSON.stringify({\r\n      action: \"game:invite\",\r\n      payload\r\n    });\r\n    room.sendTo(payload.to, message);\r\n  },\r\n  acceptGameInvite: ({ gameInvitationAccepted }) => async ({\r\n    room,\r\n    payload\r\n  }) => {\r\n    const message = JSON.stringify({\r\n      action: \"game:invite:accepted\",\r\n      payload\r\n    });\r\n    // you are player 0, they are player 1\r\n    // todo: establish colors and initialize game deterministically from invite.\r\n    room.sendTo(payload.players[1], message);\r\n    gameInvitationAccepted(payload);\r\n  }\r\n});\r\n","import * as actions from \"./actions\";\r\nimport reducer from \"./reducer\";\r\nimport container from \"./container\";\r\n\r\nexport default {\r\n  actions,\r\n  reducer,\r\n  container\r\n};\r\n","import { compose } from 'recompose';\r\n\r\nimport withRedux from './redux';\r\nimport withHandlers from './handlers';\r\n\r\nexport default compose(\r\n  withRedux,\r\n  withHandlers,\r\n);","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\r\n\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport go from \"./go\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst rootReducer = {\r\n  go: go.reducer,\r\n  router: connectRouter(history)\r\n};\r\n\r\nexport default appReducers => {\r\n  // Persistance configuration\r\n  const persistConfig = {\r\n    key: \"root\",\r\n    blacklist: [\"go\"],\r\n    storage\r\n  };\r\n\r\n  // Store.\r\n  const store = createStore(\r\n    persistReducer(\r\n      persistConfig,\r\n      combineReducers({ ...rootReducer, ...appReducers })\r\n    ),\r\n    composeWithDevTools(applyMiddleware(thunk, routerMiddleware(history)))\r\n  );\r\n\r\n  // Persistor.\r\n  const persistor = persistStore(store);\r\n  return {\r\n    store,\r\n    persistor,\r\n    history\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\r\nimport createStore from \"../../store\";\r\n\r\nimport { Route, Switch } from \"react-router\"; // react-router v4\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport { GamePage, LandingPage, LobbyPage } from \"../index\";\r\n\r\nconst { store, persistor, history } = createStore();\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <PersistGate persistor={persistor}>\r\n          <ConnectedRouter history={history}>\r\n            <Switch>\r\n              <Route exact path=\"/\" render={() => <LandingPage />} />\r\n              <Route exact path=\"/lobby\" render={() => <LobbyPage />} />\r\n              <Route path=\"/game\" render={() => <GamePage />} />\r\n              {/* <Route exact path=\"/game\" render={() => <GamePage />} /> */}\r\n              <Route render={() => <div>Miss</div>} />\r\n            </Switch>\r\n          </ConnectedRouter>\r\n        </PersistGate>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Particles from \"react-particles-js\";\r\n\r\nclass LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"LandingPage\">\r\n        <Particles\r\n          className=\"Particles\"\r\n          /*params={{\r\n            fps_limit: 28,\r\n            particles: {\r\n              color: {\r\n                value: \"#000\"\r\n              },\r\n              number: {\r\n                value: 200,\r\n                density: {\r\n                  enable: false\r\n                }\r\n              },\r\n              line_linked: {\r\n                enable: true,\r\n                distance: 30,\r\n                opacity: 0.4\r\n              },\r\n              move: {\r\n                speed: 1\r\n              },\r\n              opacity: {\r\n                anim: {\r\n                  enable: true,\r\n                  opacity_min: 0.05,\r\n                  speed: 2,\r\n                  sync: false\r\n                },\r\n                value: 0.4\r\n              }\r\n            },\r\n            polygon: {\r\n              enable: true,\r\n              scale: 0.9,\r\n              type: \"inline\",\r\n              move: {\r\n                radius: 10\r\n              },\r\n              url: \"./deer.svg\",\r\n              inline: {\r\n                arrangement: \"equidistant\"\r\n              },\r\n              draw: {\r\n                enable: true,\r\n                stroke: {\r\n                  color: \"rgba(0, 0, 0, .2)\"\r\n                }\r\n              }\r\n            },\r\n            retina_detect: false,\r\n            interactivity: {\r\n              events: {\r\n                onhover: {\r\n                  enable: true,\r\n                  mode: \"bubble\"\r\n                }\r\n              },\r\n              modes: {\r\n                bubble: {\r\n                  size: 6,\r\n                  distance: 40\r\n                }\r\n              }\r\n            }\r\n          }}*/\r\n        />\r\n\r\n        <Button\r\n          id=\"JoinLobby\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={async () => {\r\n            this.props.navigateTo({\r\n              path: \"/lobby\"\r\n            });\r\n          }}\r\n        >\r\n          Enter Lobby to Play\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","import LandingPage from \"./LandingPage\";\r\n\r\nimport go from \"../../store/go\";\r\n\r\nexport default go.container(LandingPage);\r\n","const ipfsOptions = {\r\n  repo: \"/orbitdb/go\",\r\n  // start: true,\r\n  EXPERIMENTAL: {\r\n    pubsub: true\r\n  },\r\n  config: {\r\n    Addresses: {\r\n      Swarm: [\r\n        // Use IPFS dev signal server\r\n        // \"/dns4/star-signal.cloud.ipfs.team/wss/p2p-webrtc-star\"\r\n        // \"/dns4/ws-star.discovery.libp2p.io/tcp/443/wss/p2p-websocket-star\"\r\n        \"/dns4/ws-star.discovery.libp2p.io/tcp/443/wss/p2p-websocket-star\"\r\n        // Use local signal server\r\n        // '/ip4/0.0.0.0/tcp/9090/wss/p2p-webrtc-star',\r\n      ]\r\n    }\r\n  }\r\n};\r\n\r\nconst ipfs = new window.Ipfs(ipfsOptions);\r\n\r\nconst getIPFS = () => {\r\n  if (window.ipfs) {\r\n    return Promise.resolve(window.ipfs);\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    ipfs.on(\"ready\", async () => {\r\n      window.ipfs = ipfs;\r\n      resolve(ipfs);\r\n    });\r\n  });\r\n};\r\n\r\nexport default getIPFS;\r\n","import getIPFS from \"./ipfs-helpers\";\r\n\r\nconst OrbitDB = require(\"orbit-db\");\r\n\r\nconst getOrbitDB = async () => {\r\n  if (window.orbitdb) {\r\n    return Promise.resolve(window.orbitdb);\r\n  }\r\n\r\n  const ipfs = await getIPFS();\r\n  const orbitOptions = undefined;\r\n  const orbitdb = new OrbitDB(ipfs, \"./orbitdb\", orbitOptions);\r\n  if (!window.orbitdb) {\r\n    window.orbitdb = orbitdb;\r\n  }\r\n  return Promise.resolve(window.orbitdb);\r\n};\r\n\r\nexport { getOrbitDB };\r\n","import _ from \"lodash\";\r\n\r\nvar playHistoryX = [];\r\nvar playHistoryY = [];\r\n\r\nclass Board {\r\n  static EMPTY = 0;\r\n  static BLACK = 1;\r\n  static WHITE = 2;\r\n\r\n  constructor({\r\n    size,\r\n    board,\r\n    last_move_passed,\r\n    in_atari,\r\n    attempted_suicide,\r\n    history,\r\n    captures,\r\n    capturesArrayBlack,\r\n    capturesArrayWhite,\r\n    moveCount,\r\n    moveCountArray,\r\n    last_move_undo,\r\n    current_color\r\n  }) {\r\n    if (size) {\r\n      this.size = size;\r\n      this.board = this.create_board(size);\r\n    }\r\n    if (board) {\r\n      this.size = board[0].length;\r\n      this.board = board;\r\n    }\r\n    this.current_color = current_color || Board.BLACK;\r\n    this.last_move_passed = last_move_passed || false;\r\n    this.in_atari = in_atari || false;\r\n    this.attempted_suicide = attempted_suicide || false;\r\n    this.history = history || [];\r\n    this.captures = captures || [];\r\n    this.capturesArrayBlack = capturesArrayBlack || [];\r\n    this.capturesArrayWhite = capturesArrayWhite || [];\r\n    this.moveCount = moveCount || 0;\r\n    this.moveCountArray = moveCountArray || [];\r\n    this.last_move_undo = last_move_undo || false;\r\n  }\r\n\r\n  getDataTransferObject = () => {\r\n    return {\r\n      ...JSON.parse(JSON.stringify(this))\r\n    };\r\n  };\r\n\r\n  /*\r\n   * Returns a size x size matrix with all entries initialized to Board.EMPTY\r\n   */\r\n  create_board = function(size) {\r\n    var m = [];\r\n    for (var i = 0; i < size; i++) {\r\n      m[i] = [];\r\n      for (var j = 0; j < size; j++) m[i][j] = Board.EMPTY;\r\n    }\r\n    return m;\r\n  };\r\n\r\n  reset = function() {\r\n    this.current_color = Board.BLACK;\r\n    this.board = this.create_board(this.size);\r\n    this.last_move_passed = false;\r\n    this.in_atari = false;\r\n    this.attempted_suicide = false;\r\n    this.history = [];\r\n    this.captures = [];\r\n    this.moveCount = 0;\r\n    this.moveCountArray = [];\r\n    this.last_move_undo = false;\r\n  };\r\n\r\n  /*\r\n   * Switches the current player\r\n   */\r\n  switch_player = function() {\r\n    this.current_color =\r\n      this.current_color === Board.BLACK ? Board.WHITE : Board.BLACK;\r\n  };\r\n\r\n  /*\r\n   * At any point in the game, a player can pass and let his opponent play\r\n   */\r\n  pass = function() {\r\n    if (this.last_move_passed) this.end_game();\r\n    this.last_move_passed = true;\r\n    this.switch_player();\r\n  };\r\n\r\n  /*\r\n   * At any point in the game, a player can undo and let his opponent play\r\n   */\r\n  undo = function() {\r\n    if (this.history.length) {\r\n      const { board, current_color } = this.history.pop();\r\n      this.board = board;\r\n      this.current_color = current_color;\r\n      // console.log(\"board undo\", this);\r\n    } else {\r\n      // console.log(\"no history\");\r\n    }\r\n  };\r\n\r\n  /*\r\n   * Called when the game ends (both players passed)\r\n   */\r\n  end_game = function() {\r\n    // console.log(\"GAME OVER\");\r\n  };\r\n\r\n  is_valid_state = function(history) {\r\n    // console.log(\"history length \" + this.history.length);\r\n    const state = JSON.stringify(this.board);\r\n    // console.log(\"Im checking if current state is valid\");\r\n    for (\r\n      var n = 0;\r\n      this.moveCountArray[this.moveCountArray.length - 1] >\r\n        this.moveCountArray[this.moveCountArray.length - 2] &&\r\n      this.moveCount > 0 &&\r\n      n < history.length;\r\n      n = n + 1\r\n    ) {\r\n      if (JSON.stringify(history[n].board) === state) {\r\n        // console.log(\"INVALIDDDD\");\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /*\r\n   * Attempt to place a stone at (i,j). Returns true iff the move was legal\r\n   */\r\n  play = function(i, j) {\r\n    playHistoryX.push(i);\r\n    playHistoryY.push(j);\r\n    this.moveCount++;\r\n    // console.log(this.moveCount);\r\n    this.moveCountArray.push(this.moveCount);\r\n    // console.log(\"Played at \" + i + \", \" + j);\r\n    this.attempted_suicide = this.in_atari = false;\r\n    if (\r\n      playHistoryX[playHistoryX.length - 1] ===\r\n        playHistoryX[playHistoryX.length - 2] &&\r\n      playHistoryY[playHistoryY.length - 1] ===\r\n        playHistoryY[playHistoryY.length - 2]\r\n    ) {\r\n      // console.log(\"ko rule\");\r\n      this.moveCount--;\r\n      return false;\r\n    }\r\n    if (this.board[i][j] !== Board.EMPTY) {\r\n      // console.log(\"INVALID MOVE\");\r\n      return false;\r\n    }\r\n    var color = (this.board[i][j] = this.current_color);\r\n    var captured = [];\r\n    var neighbors = this.get_adjacent_intersections(i, j);\r\n    var atari = false;\r\n\r\n    var self = this;\r\n    _.each(neighbors, function(n) {\r\n      var state = self.board[n[0]][n[1]];\r\n      if (state !== Board.EMPTY && state !== color) {\r\n        var group = self.get_group(n[0], n[1]);\r\n        // console.log(group);\r\n        if (group[\"liberties\"] === 0) captured.push(group);\r\n        else if (group[\"liberties\"] === 1) atari = true;\r\n      }\r\n    });\r\n\r\n    var turnBlack = 0;\r\n    var turnWhite = 0;\r\n\r\n    // detect suicide\r\n    if (_.isEmpty(captured) && this.get_group(i, j)[\"liberties\"] === 0) {\r\n      this.board[i][j] = Board.EMPTY;\r\n      this.attempted_suicide = true;\r\n      return false;\r\n    }\r\n\r\n    _.each(captured, function(group) {\r\n      _.each(group[\"stones\"], function(stone) {\r\n        self.board[stone[0]][stone[1]] = Board.EMPTY;\r\n        if (color === 1) {\r\n          turnBlack++;\r\n        } else if (color === 2) {\r\n          turnWhite++;\r\n        }\r\n      });\r\n    });\r\n    this.capturesArrayBlack.push(turnBlack);\r\n    this.capturesArrayWhite.push(turnWhite);\r\n\r\n    if (atari) this.in_atari = true;\r\n\r\n    this.last_move_passed = false;\r\n    this.switch_player();\r\n    const state = {\r\n      current_color: this.current_color,\r\n      board: _.cloneDeep(self.board)\r\n    };\r\n    this.history.push(state);\r\n    // console.log(\"history\", this.history);\r\n    return true;\r\n  };\r\n\r\n  /*\r\n   * Given a board position, returns a list of [i,j] coordinates representing\r\n   * orthagonally adjacent intersections\r\n   */\r\n  get_adjacent_intersections = function(i, j) {\r\n    var neighbors = [];\r\n    if (i > 0) neighbors.push([i - 1, j]);\r\n    if (j < this.size - 1) neighbors.push([i, j + 1]);\r\n    if (i < this.size - 1) neighbors.push([i + 1, j]);\r\n    if (j > 0) neighbors.push([i, j - 1]);\r\n    return neighbors;\r\n  };\r\n\r\n  /*\r\n   * Performs a breadth-first search about an (i,j) position to find recursively\r\n   * orthagonally adjacent stones of the same color (stones with which it shares\r\n   * liberties). Returns null for if there is no stone at the specified position,\r\n   * otherwise returns an object with two keys: \"liberties\", specifying the\r\n   * number of liberties the group has, and \"stones\", the list of [i,j]\r\n   * coordinates of the group's members.\r\n   */\r\n  get_group = function(i, j) {\r\n    var color = this.board[i][j];\r\n    if (color === Board.EMPTY) return null;\r\n\r\n    var visited = {}; // for O(1) lookups\r\n    var visited_list = []; // for returning\r\n    var queue = [[i, j]];\r\n    var count = 0;\r\n\r\n    let func = function(n) {\r\n      var state = self.board[n[0]][n[1]];\r\n      if (state === Board.EMPTY) count++;\r\n      if (state === color) queue.push([n[0], n[1]]);\r\n    };\r\n\r\n    while (queue.length > 0) {\r\n      var stone = queue.pop();\r\n      if (visited[stone]) continue;\r\n\r\n      var neighbors = this.get_adjacent_intersections(stone[0], stone[1]);\r\n      var self = this;\r\n\r\n      _.each(neighbors, func);\r\n\r\n      visited[stone] = true;\r\n      visited_list.push(stone);\r\n    }\r\n\r\n    return {\r\n      liberties: count,\r\n      stones: visited_list\r\n    };\r\n  };\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { getOrbitDB } from \"../../utils/orbit-helpers\";\r\n\r\nimport { PageNavigation, PlayerProfile, BoardView } from \"../index\";\r\n\r\nimport Board from \"../../utils/board\";\r\n\r\nconst Room = require(\"ipfs-pubsub-room\");\r\n\r\nconst BOARD_SIZE = 19;\r\n\r\nconst playerColorStringToInt = color => {\r\n  return color === \"black\" ? 1 : 2;\r\n};\r\n\r\nconst peerIdToProfileAttribute = (players, peerId, attr) => {\r\n  if (players && players[peerId]) {\r\n    return players[peerId][attr];\r\n  }\r\n  return \"\";\r\n};\r\n\r\nclass GamePage extends Component {\r\n  state = {\r\n    ready: false\r\n  };\r\n  async componentWillMount() {\r\n    const { router, selfPeerInfo, playerProfileUpdated } = this.props;\r\n    const { pathname } = router.location;\r\n    const orbitDBAddress = pathname.replace(\"/game\", \"\");\r\n    const roomName = orbitDBAddress.split(\"/\")[3];\r\n    const orbitdb = await getOrbitDB();\r\n    const peerInfo = await orbitdb._ipfs.id();\r\n    selfPeerInfo({ peerInfo });\r\n    const room = Room(orbitdb._ipfs, roomName);\r\n    this.orbitdb = orbitdb;\r\n    this.room = room;\r\n    this.peerId = peerInfo.id;\r\n    this.db = await orbitdb.open(orbitDBAddress);\r\n    await this.db.load();\r\n    const dto = await this.db.get(\"dto:latest\")[0];\r\n    // console.log(\"loaded dto: \", dto);\r\n    if (dto === undefined) {\r\n      this.board = new Board({ size: BOARD_SIZE });\r\n      const dto = this.board.getDataTransferObject();\r\n      await this.db.put({\r\n        _id: \"dto:latest\",\r\n        name: \"dto:latest\",\r\n        ...dto\r\n      });\r\n    } else {\r\n      this.board = new Board(dto);\r\n      // console.log(\"though it was loaded, it does not render...\", this.board);\r\n    }\r\n\r\n    room.on(\"peer joined\", async peer => {\r\n      // console.log(\"Peer joined the room\", peer);\r\n    });\r\n\r\n    room.on(\"peer left\", peer => {\r\n      // console.log(\"Peer left...\", peer);\r\n    });\r\n\r\n    // now started to listen to room\r\n    room.on(\"subscribed\", () => {\r\n      // console.log(\"Now connected!\");\r\n    });\r\n\r\n    room.on(\"message\", async message => {\r\n      const { action, payload } = JSON.parse(message.data);\r\n      console.log(\"message...\", message, action, payload);\r\n\r\n      if (action === \"lobby:player:profileUpdated\") {\r\n        playerProfileUpdated({\r\n          ...payload\r\n        });\r\n      }\r\n\r\n      if (action === \"game:dto:saved\") {\r\n        this.board = new Board(payload.dto);\r\n        this.setState({\r\n          board: this.board\r\n        });\r\n      }\r\n      if (action === \"game:dto:deleted\") {\r\n        this.board = new Board(payload.dto);\r\n        this.setState({\r\n          board: this.board\r\n        });\r\n      }\r\n    });\r\n\r\n    const pollTillPresent = setInterval(async () => {\r\n      const [opponent] = room.getPeers();\r\n\r\n      if (opponent) {\r\n        const players = [peerInfo.id, opponent].sort();\r\n        this.setState({\r\n          ready: true,\r\n          opponent,\r\n          you: peerInfo.id,\r\n          colors: {\r\n            [players[0]]: \"white\",\r\n            [players[1]]: \"black\"\r\n          }\r\n        });\r\n        clearInterval(pollTillPresent);\r\n      }\r\n    }, 1 * 1000);\r\n  }\r\n  render() {\r\n    const { go, saveDTO, deleteDTO } = this.props;\r\n    const { ready, colors, you, opponent } = this.state;\r\n\r\n    if (!ready) {\r\n      return <CircularProgress />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"GamePage\">\r\n        <PageNavigation>\r\n          <Paper style={{ padding: \"16px\", marginBottom: \"16px\" }}>\r\n            <PlayerProfile room={this.room} peerId={this.peerId} />\r\n          </Paper>\r\n          \r\n          &nbsp;\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={async () => {\r\n              this.board = new Board({ size: BOARD_SIZE });\r\n              const dto = this.board.getDataTransferObject();\r\n              await this.db.put({\r\n                _id: \"dto:latest\",\r\n                name: \"dto:latest\",\r\n                ...dto\r\n              });\r\n              this.setState({\r\n                board: this.board\r\n              });\r\n\r\n              deleteDTO({\r\n                room: this.room,\r\n                db: this.db,\r\n                dto,\r\n                opponent\r\n              });\r\n            }}\r\n          >\r\n            New Game\r\n          </Button>\r\n          &nbsp;\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Request Undo\r\n          </Button>\r\n          &nbsp;\r\n          <Button\r\n            align=\"right\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={async () => {\r\n              saveDTO({\r\n                room: this.room,\r\n                db: this.db,\r\n                dto: this.board.getDataTransferObject(),\r\n                opponent\r\n              });\r\n            }}\r\n          >\r\n            Save Game\r\n          </Button>\r\n          \r\n          <p>\r\n            You are {colors[you]},{\" \"}\r\n            {peerIdToProfileAttribute(go.players, opponent, \"playerName\")} is{\" \"}\r\n            {colors[opponent]}. It is {\" \"}\r\n            {this.board.current_color === playerColorStringToInt(colors[you])\r\n              ? \"your turn\"\r\n              : `${peerIdToProfileAttribute(go.players, opponent, \"playerName\")}'s turn.`}\r\n          </p>\r\n          <BoardView\r\n            currentPlayer={playerColorStringToInt(colors[you])}\r\n            board={this.board}\r\n            onPlay={board => {\r\n              this.board = board;\r\n              // really any state update will cause a re-render after assignment..\r\n              this.setState({\r\n                board\r\n              });\r\n              saveDTO({\r\n                room: this.room,\r\n                db: this.db,\r\n                dto: this.board.getDataTransferObject(),\r\n                opponent\r\n              });\r\n            }}\r\n          />\r\n        </PageNavigation>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GamePage;\r\n","import GamePage from \"./GamePage\";\r\n\r\nimport go from \"../../store/go\";\r\n\r\nexport default go.container(GamePage);\r\n","import React, { Component } from \"react\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport getIPFS from \"../../utils/ipfs-helpers\";\r\n\r\nimport { getOrbitDB } from \"../../utils/orbit-helpers\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport {\r\n  PageNavigation,\r\n  PlayerProfile,\r\n  NewGameDialog,\r\n  IPFSPubSubChat\r\n} from \"../index\";\r\n\r\nconst Room = require(\"ipfs-pubsub-room\");\r\n\r\nconst peerIdToProfileAttribute = (players, peerId, attr) => {\r\n  if (players && players[peerId]) {\r\n    return players[peerId][attr];\r\n  }\r\n  return peerId;\r\n};\r\n\r\nclass LobbyPage extends Component {\r\n  state = {\r\n    peers: []\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n  async componentWillMount() {\r\n    // console.log(this.props);\r\n    const {\r\n      selfPeerInfo,\r\n      playerProfileUpdated,\r\n      gameInvitationRecieved,\r\n      navigateTo\r\n    } = this.props;\r\n    const ipfs = await getIPFS();\r\n    const orbitdb = await getOrbitDB();\r\n    const peerInfo = await ipfs.id();\r\n    this.peerInfo = peerInfo;\r\n\r\n    selfPeerInfo({ peerInfo });\r\n    this.roomName = \"go.lobby\";\r\n    const room = Room(ipfs, this.roomName);\r\n    this.room = room;\r\n    this.ipfs = ipfs;\r\n    this.orbitdb = orbitdb;\r\n\r\n    // room.on(\"peer left\", peer => {\r\n    //   console.log(\"Peer left...\", peer);\r\n    // });\r\n\r\n    // now started to listen to room\r\n    // room.on(\"subscribed\", () => {\r\n    //   console.log(\"Now connected!\");\r\n    // });\r\n\r\n    room.on(\"message\", async message => {\r\n      const parsedMessage = JSON.parse(message.data);\r\n      // console.log(parsedMessage);\r\n      if (parsedMessage.action === \"lobby:player:profileUpdated\") {\r\n        playerProfileUpdated({\r\n          ...parsedMessage.payload\r\n        });\r\n      }\r\n      if (parsedMessage.action === \"game:invite\") {\r\n        gameInvitationRecieved({\r\n          from: message.from,\r\n          ...parsedMessage.payload\r\n        });\r\n      }\r\n      if (parsedMessage.action === \"game:invite:accepted\") {\r\n        // TODO update permissions to restrict players only\r\n        const newGameDB = await orbitdb.create(\r\n          `go.game.${parsedMessage.payload.nonce}`,\r\n          \"docstore\",\r\n          {\r\n            replicate: true,\r\n            overwrite: true,\r\n            write: [\"*\"]\r\n          }\r\n        );\r\n        const gameAddress = newGameDB.address.toString();\r\n        navigateTo({\r\n          path: `/game${gameAddress}`\r\n        });\r\n      }\r\n    });\r\n\r\n    setInterval(async () => {\r\n      this.setState({\r\n        peers: room.getPeers()\r\n      });\r\n    }, 5 * 1000);\r\n  }\r\n  render() {\r\n    const { peers } = this.state;\r\n    const { go, sendGameInvite } = this.props;\r\n\r\n    const { players } = go;\r\n\r\n    const isProfileReady = this.room && this.peerInfo.id;\r\n    const isLobbyReady = this.room && peers.length > 0;\r\n\r\n    // console.log(\"lobby render.\");\r\n\r\n    return (\r\n      <div className=\"LobbyPage\">\r\n        <PageNavigation>\r\n          <Grid container spacing={24}>\r\n            <Grid item xs={12}>\r\n              <Paper style={{ padding: \"16px\" }}>\r\n                {!isProfileReady && <CircularProgress />}\r\n                {isProfileReady && (\r\n                  <PlayerProfile room={this.room} peerId={this.peerInfo.id} />\r\n                )}\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Paper style={{ padding: \"16px\" }}>\r\n                {!isLobbyReady && <CircularProgress />}\r\n                {isLobbyReady && (\r\n                  <div>\r\n                    <h3> Ask for a game with: </h3>\r\n                    {peers.map(peerId => {\r\n                      return (\r\n                        <div key={peerId}>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={async () => {\r\n                              const payload = {\r\n                                to: peerId\r\n                              };\r\n                              sendGameInvite({ room: this.room, payload });\r\n                            }}\r\n                          >\r\n                            {peerIdToProfileAttribute(\r\n                              players,\r\n                              peerId,\r\n                              \"playerEmoji\"\r\n                            )}\r\n                            &nbsp;{\" \"}\r\n                            {peerIdToProfileAttribute(\r\n                              players,\r\n                              peerId,\r\n                              \"playerName\"\r\n                            )}\r\n                          </Button>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Paper style={{ padding: \"16px\" }}>\r\n                {!isLobbyReady && <CircularProgress />}\r\n                {isLobbyReady && <IPFSPubSubChat room={this.room} />}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <NewGameDialog room={this.room} orbitdb={this.orbitdb} />\r\n        </PageNavigation>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LobbyPage;\r\n","import LobbyPage from \"./LobbyPage\";\r\n\r\nimport go from \"../../store/go\";\r\n\r\nexport default go.container(LobbyPage);\r\n","import BoardIntersection from \"./BoardIntersection\";\r\nexport default BoardIntersection;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Board from \"../../utils/board\";\r\n\r\nimport { GRID_SIZE } from \"../../constants\";\r\n\r\nclass BoardIntersection extends Component {\r\n  handleClick = () => {\r\n    if (this.props.currentPlayer !== this.props.board.current_color){\r\n      console.log('not your turn!!!')\r\n      return;\r\n    }\r\n    if (this.props.board.play(this.props.row, this.props.col))\r\n      this.props.onPlay(this.props.board);\r\n  };\r\n  render() {\r\n    var style = {\r\n      top: this.props.row * GRID_SIZE,\r\n      left: this.props.col * GRID_SIZE,\r\n      backgroundColor:\r\n        this.props.color !== Board.EMPTY\r\n          ? this.props.color === Board.BLACK\r\n            ? window._PLAYER_ONE_COLOR\r\n            : window._PLAYER_TWO_COLOR\r\n          : undefined,\r\n      backgroundImage:\r\n        this.props.color !== Board.EMPTY\r\n          ? this.props.color === Board.BLACK\r\n            ? window._PLAYER_ONE_IMAGE\r\n            : window._PLAYER_TWO_IMAGE\r\n          : undefined\r\n    };\r\n\r\n    var classes = \"intersection\";\r\n    if (this.props.color !== Board.EMPTY)\r\n      classes += this.props.color === Board.BLACK ? \" black\" : \" white\";\r\n\r\n    return <div onClick={this.handleClick} className={classes} style={style} />;\r\n  }\r\n}\r\n\r\nexport default BoardIntersection;\r\n","export const GRID_SIZE = 38;","import BoardView from \"./BoardView\";\r\nexport default BoardView;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { BoardIntersection } from \"../index\";\r\n\r\nimport { GRID_SIZE } from \"../../constants\";\r\n\r\nclass BoardView extends Component {\r\n  render() {\r\n    const { board } = this.props;\r\n    var intersections = [];\r\n    for (var i = 0; i < board.size; i++)\r\n      for (var j = 0; j < board.size; j++)\r\n        intersections.push(\r\n          <BoardIntersection\r\n            key={`${i}-${j}`}\r\n            {...{\r\n              board: board,\r\n              color: board.board[i][j],\r\n              row: i,\r\n              col: j,\r\n              currentPlayer: this.props.currentPlayer,\r\n              onPlay: this.props.onPlay\r\n            }}\r\n          />\r\n        );\r\n    var style = {\r\n      width: board.size * GRID_SIZE,\r\n      height: board.size * GRID_SIZE\r\n    };\r\n    return (\r\n      <div style={style} id=\"board\">\r\n        {intersections}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardView;\r\n","import PassView from \"./PassView\";\r\nexport default PassView;\r\n","import React, { Component } from \"react\";\r\n\r\nclass PassView extends Component {\r\n  handleClick = e => {\r\n    this.props.board.pass();\r\n  };\r\n  render() {\r\n    return (\r\n      <input\r\n        id=\"pass-btn\"\r\n        type=\"button\"\r\n        value=\"Pass\"\r\n        onClick={this.handleClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PassView;\r\n","import NewGame from \"./NewGame\";\r\nexport default NewGame;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NewGame extends Component {\r\n  handleClick = e => {\r\n    window.location.reload(false);\r\n    this.props.board.reset();\r\n    this.props.onReset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        id=\"newgame-btn\"\r\n        type=\"button\"\r\n        value=\"New Game\"\r\n        onClick={this.handleClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewGame;\r\n","import CapturesView from \"./CapturesView\";\r\n\r\nexport default CapturesView;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CapturesView extends Component {\r\n  render() {\r\n    let capturesArray =\r\n      this.props.color === \"black\"\r\n        ? this.props.board.capturesArrayBlack\r\n        : this.props.board.capturesArrayWhite;\r\n    var textCaptures =\r\n      `Captures by ${this.props.color}: ` +\r\n      capturesArray.reduce((a, b) => a + b, 0);\r\n    return <div id=\"alerts\">&nbsp;{textCaptures}&nbsp;</div>;\r\n  }\r\n}\r\n\r\nexport default CapturesView;\r\n","import React, { Component } from \"react\";\r\n// import _ from \"lodash\";\r\n\r\nimport { BoardView, PassView, NewGame, CapturesView } from \"../index\";\r\n\r\nclass ContainerView extends Component {\r\n\r\n  componentWillMount() {\r\n    console.log('container view mount....',)\r\n    this.setState({\r\n      board: this.props.board,\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log('container view receive props....',)\r\n    this.setState({\r\n      board: nextProps.board\r\n    });\r\n  }\r\n\r\n  onBoardUpdate() {\r\n    // if (this.state.board.is_valid_state(this.state.history)) {\r\n    //   let history = this.state.history;\r\n    //   history.push(_.cloneDeep(this.state.board));\r\n    //   this.setState({ board: this.state.board, history: history });\r\n    //   console.log(\"board was updated and component shall render\");\r\n    // } else {\r\n    //   console.log(\"invalid move, reset to prior state\");\r\n    //   console.log(this.state.history.length);\r\n    //   var last = this.state.history[this.state.history.length - 1];\r\n    //   console.log(\"set board to\", last);\r\n    //   this.setState({ board: last });\r\n    //   this.state.history.pop();\r\n    //   console.log(this.state.history.length);\r\n    // }\r\n  }\r\n\r\n  undo = () => {\r\n    // var { history } = this.state;\r\n    // if (history.length <= 1) {\r\n    //   window.location.reload(false);\r\n    //   console.log(\"nothing to undo\");\r\n    //   return;\r\n    // }\r\n    // console.log(\"popping:\", history.pop());\r\n    // var last = history[history.length - 1];\r\n    // console.log(\"set board to\", last);\r\n    // this.setState({ board: last, history: history });\r\n    // this.props.board.capturesArrayBlack.pop();\r\n    // this.props.board.capturesArrayWhite.pop();\r\n    // this.moveCount--;\r\n    // console.log(\"board was updated and component shall render\");\r\n\r\n    // console.log(\"undo...\", this.state.history, this.state.board);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ContainerView\">\r\n        <div className=\"ContainerViewBoard\">\r\n          <BoardView\r\n            board={this.state.board}\r\n            onPlay={this.onBoardUpdate.bind(this)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"ContainerViewSidebar\">\r\n          <a href=\"https://github.com/L1zz13/G0/\">Source Code</a>\r\n          <CapturesView board={this.state.board} color={\"black\"} />\r\n          <CapturesView board={this.state.board} color={\"white\"} />\r\n          <PassView board={this.state.board} />\r\n          <br />\r\n          <br />\r\n          <NewGame\r\n            board={this.state.board}\r\n            onReset={this.onBoardUpdate.bind(this)}\r\n          />\r\n          <br />\r\n          <br />\r\n          <button onClick={this.undo}>Undo</button>\r\n          <br />\r\n          <br />\r\n\r\n          <p>\r\n            Select Player 1 Color: <br />\r\n            <select\r\n              name=\"playerOneColor\"\r\n              onChange={e => {\r\n                console.log(e.target.value);\r\n                window._PLAYER_ONE_COLOR = e.target.value;\r\n              }}\r\n            >\r\n              <option name=\"default\" value=\"#5632a8\">\r\n                default\r\n              </option>\r\n              <option name=\"black\" value=\"#000000\">\r\n                black\r\n              </option>\r\n              <option name=\"red\" value=\"#D0112E\">\r\n                red\r\n              </option>\r\n              <option name=\"blue\" value=\"#4B98F9\">\r\n                blue\r\n              </option>\r\n              <option name=\"orange\" value=\"#FD9D16\">\r\n                orange\r\n              </option>\r\n            </select>\r\n          </p>\r\n          <p>\r\n            Select Player 2 Color: <br />\r\n            <select\r\n              name=\"playerTwoColor\"\r\n              onChange={e => {\r\n                console.log(e);\r\n                window._PLAYER_TWO_COLOR = e.target.value;\r\n              }}\r\n            >\r\n              <option name=\"default\" value=\"#fbfbca\">\r\n                default\r\n              </option>\r\n              <option name=\"default\" value=\"#ffffff\">\r\n                white\r\n              </option>\r\n              <option name=\"pale blue\" value=\"#C1F0FE\">\r\n                pale blue\r\n              </option>\r\n              <option name=\"lavender\" value=\"#E4C2FD\">\r\n                lavender\r\n              </option>\r\n              <option name=\"green\" value=\"#A1FD98\">\r\n                green\r\n              </option>\r\n            </select>\r\n          </p>\r\n\r\n          <p>\r\n            Select Player 1 Emoji: <br />\r\n            <select\r\n              name=\"playerOneImage\"\r\n              onChange={e => {\r\n                console.log(e.target.value);\r\n                window._PLAYER_ONE_IMAGE = e.target.value;\r\n              }}\r\n            >\r\n              <option name=\"default\" value=\"\">\r\n                none\r\n              </option>\r\n              <option\r\n                name=\"1\"\r\n                value=\"url('http://pages.kwanzoo.com/rs/358-EUI-570/images/pusheen-cat-donuts-black-small-2.png')\"\r\n              >\r\n                donut pusheen\r\n              </option>\r\n              <option\r\n                name=\"2\"\r\n                value=\"url('http://pages.kwanzoo.com/rs/358-EUI-570/images/pusheen-squid-black-SMALL.png')\"\r\n              >\r\n                squid pusheen\r\n              </option>\r\n              <option\r\n                name=\"3\"\r\n                value=\"url('http://pages.kwanzoo.com/rs/358-EUI-570/images/happyface-black-small-3.png')\"\r\n              >\r\n                happy face\r\n              </option>\r\n            </select>{\" \"}\r\n          </p>\r\n          <p>\r\n            Select Player 2 Emoji: <br />\r\n            <select\r\n              name=\"playerTwoImage\"\r\n              onChange={e => {\r\n                console.log(e.target.value);\r\n                window._PLAYER_TWO_IMAGE = e.target.value;\r\n              }}\r\n            >\r\n              <option name=\"default\" value=\"\">\r\n                none\r\n              </option>\r\n              <option\r\n                name=\"1\"\r\n                value=\"url('http://pages.kwanzoo.com/rs/358-EUI-570/images/pusheen-cat-cat-SMOL.png')\"\r\n              >\r\n                cat pusheen\r\n              </option>\r\n              <option\r\n                name=\"2\"\r\n                value=\"url('http://pages.kwanzoo.com/rs/358-EUI-570/images/pusheen-art-SMOL.png')\"\r\n              >\r\n                art pusheen\r\n              </option>\r\n              <option\r\n                name=\"3\"\r\n                value=\"url('http://pages.kwanzoo.com/rs/358-EUI-570/images/upside-down-happy-SMALL.png')\"\r\n              >\r\n                happy face\r\n              </option>\r\n            </select>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContainerView;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\n\r\nconst peerIdToProfileAttribute = (players, peerId, attr) => {\r\n  if (players && players[peerId]) {\r\n    return players[peerId][attr];\r\n  }\r\n  return \"\";\r\n};\r\n\r\nclass NewGameDialog extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (\r\n      nextProps.go.invitation &&\r\n      nextProps.go.invitation.from &&\r\n      !Object.keys(nextProps.go.game).length\r\n    ) {\r\n      this.setState({\r\n        from: nextProps.go.invitation.from,\r\n        open: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        open: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { go, room, acceptGameInvite, navigateTo } = this.props;\r\n    const { from, open } = this.state;\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Game Invite\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Invitation from {peerIdToProfileAttribute(go.players, from, 'playerName')}.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({ open: false });\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              Reject\r\n            </Button>\r\n            <Button\r\n              onClick={async () => {\r\n                const nonce = Math.random().toString(16);\r\n                acceptGameInvite({\r\n                  room,\r\n                  payload: {\r\n                    nonce,\r\n                    players: [go.peerInfo.id, go.invitation.from]\r\n                  }\r\n                });\r\n\r\n                const newGameDB = await this.props.orbitdb.create(\r\n                  `go.game.${nonce}`,\r\n                  \"docstore\",\r\n                  {\r\n                    replicate: true,\r\n                    overwrite: true,\r\n                    write: [\"*\"]\r\n                  }\r\n                );\r\n\r\n                const gameAddress = newGameDB.address.toString();\r\n\r\n                navigateTo({\r\n                  path: `/game${gameAddress}`\r\n                });\r\n              }}\r\n              color=\"primary\"\r\n              autoFocus\r\n            >\r\n              Accept\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewGameDialog;\r\n","import NewGameDialog from \"./NewGameDialog\";\r\nimport go from \"../../store/go\";\r\n\r\nexport default go.container(NewGameDialog);\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst peerIdToProfileAttribute = (players, peerId, attr) => {\r\n  if (players && players[peerId]) {\r\n    return players[peerId][attr];\r\n  }\r\n  return \"\";\r\n};\r\n\r\nclass IPFSPubSubChat extends Component {\r\n  state = {\r\n    content: \"\",\r\n    messages: []\r\n  };\r\n  componentWillMount() {\r\n    const { room, chatMessageReceived } = this.props;\r\n    room.on(\"message\", async message => {\r\n      const parsedMessage = JSON.parse(message.data);\r\n      if (parsedMessage.action === \"chat:message:sent\") {\r\n        const chatMessage = {\r\n          ...parsedMessage.payload,\r\n          from: message.from\r\n        };\r\n        chatMessageReceived(chatMessage);\r\n      }\r\n    });\r\n  }\r\n\r\n  scrollToBottomOfChat = () => {\r\n    setTimeout(() => {\r\n      if (!document.querySelector(\".chatContainer\")) {\r\n        return;\r\n      }\r\n      document.querySelector(\r\n        \".chatContainer\"\r\n      ).scrollTop = document.querySelector(\".chatContainer\").scrollHeight;\r\n    }, 1 * 1000);\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n\r\n  sendMessage = () => {\r\n    this.props.sendMessage({\r\n      room: this.props.room,\r\n      payload: {\r\n        content: this.state.content,\r\n        timestamp: Math.round(new Date().getTime() / 1000)\r\n      }\r\n    });\r\n    this.setState({\r\n      content: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { go } = this.props;\r\n    const { messages, players } = go;\r\n    return (\r\n      <div>\r\n        <h3>Chat</h3>\r\n        {!messages.length && <h5>No Messages</h5>}\r\n        <List\r\n          className=\"chatContainer\"\r\n          style={{\r\n            maxHeight: \"420px\",\r\n            overflowY: \"scroll\"\r\n          }}\r\n        >\r\n          {messages.map(m => {\r\n            const mood = peerIdToProfileAttribute(\r\n              players,\r\n              m.from,\r\n              \"playerEmoji\"\r\n            );\r\n            const name = peerIdToProfileAttribute(\r\n              go.players,\r\n              m.from,\r\n              \"playerName\"\r\n            );\r\n            return (\r\n              <ListItem key={m.timestamp} alignItems=\"flex-start\">\r\n                {mood}\r\n                <ListItemText\r\n                  primary={name}\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography component=\"span\" color=\"textPrimary\">\r\n                        {m.content}\r\n                      </Typography>\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n            );\r\n          })}\r\n          {this.scrollToBottomOfChat()}\r\n        </List>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          <TextField\r\n            label=\"Message\"\r\n            fullWidth\r\n            value={this.state.content}\r\n            onChange={this.handleChange(\"content\")}\r\n            margin=\"normal\"\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            onClick={this.sendMessage}\r\n          >\r\n            Send\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IPFSPubSubChat;\r\n","import IPFSPubSubChat from \"./IPFSPubSubChat\";\r\n\r\nimport go from \"../../store/go\";\r\n\r\nexport default go.container(IPFSPubSubChat);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport GamepadOutlinedIcon from \"@material-ui/icons/GamepadOutlined\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    }\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`\r\n      \r\n    }\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3\r\n  }\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          <ListItem\r\n            button\r\n            onClick={() => {\r\n              this.props.navigateTo({\r\n                path: \"/\"\r\n              });\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              <HomeOutlinedIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Home\"} />\r\n          </ListItem>\r\n\r\n\r\n\r\n          <ListItem\r\n            button\r\n            onClick={() => {\r\n              this.props.navigateTo({\r\n                path: \"/lobby\"\r\n              });\r\n            }}\r\n\r\n          >\r\n            <ListItemIcon>\r\n              <GamepadOutlinedIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Lobby\"} />\r\n          </ListItem>\r\n\r\n<ListItem\r\n            button\r\n            onClick={() => {\r\n              this.props.navigateTo({\r\n                path: \"/\"\r\n              });\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              <HomeOutlinedIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Single Player Game\"} />\r\n          </ListItem>\r\n\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              unicornsheep peer to peer go\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              container={this.props.container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {this.props.children}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  // Injected by the documentation to work in an iframe.\r\n  // You won't need it on your project.\r\n  container: PropTypes.object,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ResponsiveDrawer);\r\n","import PageNavigation from \"./PageNavigation\";\r\n\r\nimport go from \"../../store/go\";\r\n\r\nexport default go.container(PageNavigation);\r\n","import React, { Component } from \"react\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nconst moods = [\r\n  {\r\n    value: \"😀\",\r\n    label: \"😀\"\r\n  },\r\n  {\r\n    value: \"😅\",\r\n    label: \"😅\"\r\n  },\r\n  {\r\n    value: \"😇\",\r\n    label: \"😇\"\r\n  },\r\n  {\r\n    value: \"🤔\",\r\n    label: \"🤔\"\r\n  },\r\n  {\r\n    value: \"😰\",\r\n    label: \"😰\"\r\n  }\r\n];\r\n\r\nclass PlayerProfile extends Component {\r\n  state = {\r\n    playerName: \"\",\r\n    playerEmoji: \"😀\"\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n    if (name === \"playerName\" || name === \"playerEmoji\") {\r\n      this.safePlayerProfileUpdate();\r\n    }\r\n  };\r\n\r\n  sendProfileToPeers = () => {\r\n    this.props.updatePlayerProfile({\r\n      room: this.props.room,\r\n      payload: {\r\n        peerId: this.props.peerId,\r\n        playerName: this.state.playerName,\r\n        playerEmoji: this.state.playerEmoji\r\n      }\r\n    });\r\n  };\r\n\r\n  safePlayerProfileUpdate = _.debounce(async () => {\r\n    this.sendProfileToPeers();\r\n  }, 1 * 1000);\r\n\r\n  componentWillMount() {\r\n    const profile = {\r\n      peerId: this.props.peerId,\r\n      playerName: \"guest\",\r\n      playerEmoji: \"😀\"\r\n    };\r\n    this.setState({\r\n      ...profile\r\n    });\r\n\r\n    this.safePlayerProfileUpdate();\r\n    \r\n    this.props.room.on(\"peer joined\", async peer => {\r\n      console.log(\"Peer joined the room\", peer);\r\n      this.sendProfileToPeers();\r\n    });\r\n    this.props.room.on(\"subscribed\", () => {\r\n      // console.log(\"Now connected!\");\r\n      this.sendProfileToPeers();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TextField\r\n          id=\"standard-select-currency\"\r\n          select\r\n          label=\"Mood\"\r\n          value={this.state.playerEmoji}\r\n          onChange={this.handleChange(\"playerEmoji\")}\r\n          margin=\"normal\"\r\n        >\r\n          {moods.map(option => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        &nbsp;&nbsp;\r\n        <TextField\r\n          label=\"Nickname\"\r\n          value={this.state.playerName}\r\n          onChange={this.handleChange(\"playerName\")}\r\n          margin=\"normal\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerProfile;\r\n","import PlayerProfile from \"./PlayerProfile\";\r\nimport go from \"../../store/go\";\r\nexport default go.container(PlayerProfile);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { App } from \"./components\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}